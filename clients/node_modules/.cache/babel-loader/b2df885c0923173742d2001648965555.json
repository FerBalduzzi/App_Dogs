{"ast":null,"code":"export const GET_RAZA_DETAIL = \"GET_RAZA_DETAIL\";\nexport const GET_RAZA_ALL = \"GET_RAZA_ALL\";\nexport const GET_RAZA = \"GET_RAZA\";\nexport const GET_TEMPERAMENTO = \"GET_TEMPERAMENTO\";\nexport const SORT_RAZA = \"SORT_RAZA\";\nexport const ASD = \"Razas-A-Z\";\nexport const DES = \"Razas-Z-A\";\nexport function getRazasAll() {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/dogs`).then(response => response.json()).then(json => {\n      dispatch({\n        type: GET_RAZA_ALL,\n        payload: json\n      });\n    });\n  };\n}\nexport function getRazasDetails(razaId) {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/dogs/${razaId}`).then(response => response.json()).then(json => {\n      dispatch({\n        type: GET_RAZA_DETAIL,\n        payload: json\n      });\n    });\n  };\n}\nexport function getRaza(razaName) {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/dogs?name=${razaName}`).then(response => response.json()).then(json => {\n      dispatch({\n        type: GET_RAZA,\n        payload: json\n      });\n    });\n  };\n}\nexport function getTemperamentos() {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/temperament`).then(response => response.json()).then(json => {\n      dispatch({\n        type: GET_TEMPERAMENTO,\n        payload: json\n      });\n    });\n  };\n}\nexport function sort(orden, razas) {\n  let razaSort = [...razas];\n  razaSort.sort(function (a, b) {\n    var nombreA = a.name.toUpperCase();\n    var nombreB = b.name.toUpperCase();\n\n    if (orden === ASD) {\n      if (nombreA < nombreB) {\n        return -1;\n      }\n\n      if (nombreA > nombreB) {\n        return 1;\n      }\n\n      return 0;\n    }\n\n    if (orden === DES) {\n      if (nombreA < nombreB) {\n        return 1;\n      }\n\n      if (nombreA > nombreB) {\n        return -1;\n      }\n\n      return 0;\n    }\n  });\n  return function (dispatch) {\n    dispatch({\n      type: SORT_RAZA,\n      payload: razaSort\n    });\n  };\n}\nexport function filtroTemp(razaActual, temperamento) {\n  let filtro = [...razaActual];\n  filtro = filtro.filter(actual => {\n    if (actual.temperament) {\n      let razaTemp = actual.temperament.split(\", \");\n      return razaTemp.includes(temperamento);\n    } else {\n      return false;\n    }\n  });\n  return function (dispatch) {\n    dispatch({\n      type: SORT_RAZA,\n      payload: filtro\n    });\n  };\n} //https://api.thedogapi.com/v1/images/search?breed_ids=1\n// forma de buscar por id","map":{"version":3,"sources":["C:/Users/usuario/Desktop/dogs_app-main/dogs_app/clients/src/actions/index.js"],"names":["GET_RAZA_DETAIL","GET_RAZA_ALL","GET_RAZA","GET_TEMPERAMENTO","SORT_RAZA","ASD","DES","getRazasAll","dispatch","fetch","then","response","json","type","payload","getRazasDetails","razaId","getRaza","razaName","getTemperamentos","sort","orden","razas","razaSort","a","b","nombreA","name","toUpperCase","nombreB","filtroTemp","razaActual","temperamento","filtro","filter","actual","temperament","razaTemp","split","includes"],"mappings":"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","sourcesContent":["export const GET_RAZA_DETAIL = \"GET_RAZA_DETAIL\";\r\nexport const GET_RAZA_ALL = \"GET_RAZA_ALL\";\r\nexport const GET_RAZA = \"GET_RAZA\";\r\nexport const GET_TEMPERAMENTO = \"GET_TEMPERAMENTO\";\r\nexport const SORT_RAZA = \"SORT_RAZA\";\r\nexport const ASD = \"Razas-A-Z\";\r\nexport const DES = \"Razas-Z-A\";\r\n\r\nexport function getRazasAll() {\r\n  return function (dispatch) {\r\n    return fetch(`http://localhost:3001/dogs`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({ type: GET_RAZA_ALL, payload: json });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getRazasDetails(razaId) {\r\n  return function (dispatch) {\r\n    return fetch(`http://localhost:3001/dogs/${razaId}`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({ type: GET_RAZA_DETAIL, payload: json });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getRaza(razaName) {\r\n  return function (dispatch) {\r\n    return fetch(`http://localhost:3001/dogs?name=${razaName}`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({ type: GET_RAZA, payload: json });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getTemperamentos() {\r\n  return function (dispatch) {\r\n    return fetch(`http://localhost:3001/temperament`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({ type: GET_TEMPERAMENTO, payload: json });\r\n      });\r\n  };\r\n}\r\n\r\nexport function sort(orden, razas) {\r\n  let razaSort = [...razas];\r\n\r\n  razaSort.sort(function (a, b) {\r\n    var nombreA = a.name.toUpperCase();\r\n    var nombreB = b.name.toUpperCase();\r\n\r\n    if (orden === ASD) {\r\n      if (nombreA < nombreB) {\r\n        return -1;\r\n      }\r\n      if (nombreA > nombreB) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    }\r\n    if (orden === DES) {\r\n      if (nombreA < nombreB) {\r\n        return 1;\r\n      }\r\n      if (nombreA > nombreB) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n  });\r\n  return function (dispatch) {\r\n    dispatch({ type: SORT_RAZA, payload: razaSort });\r\n  };\r\n}\r\n\r\nexport function filtroTemp(razaActual, temperamento) {\r\n  let filtro = [...razaActual];\r\n  filtro = filtro.filter((actual) => {\r\n    if (actual.temperament) {\r\n      let razaTemp = actual.temperament.split(\", \");\r\n      return razaTemp.includes(temperamento);\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n  return function (dispatch) {\r\n    dispatch({ type: SORT_RAZA, payload: filtro });\r\n  };\r\n}\r\n\r\n//https://api.thedogapi.com/v1/images/search?breed_ids=1\r\n// forma de buscar por id\r\n"]},"metadata":{},"sourceType":"module"}